
#include "Skill System Options.event"
#include "Internals/SkillSystem.event"
#include "skill_lists.event" //who learns what skills when
#include "Battle Calculations.event" //battle calcs
#include "charge_table.event"
SkillIcons:
#incext Png2Dmp "SkillIcons.png"
//new macros and lists for easy skill swapping, can be used as the same time as the csvs (but will write over them)
#ifdef __USE_DESCRIPTION_MACROS__
#include "skill_descriptions.event"
#endif
#ifdef __USE_ICON_MACROS__
#include "skill_icons.event"
#endif
PUSH

//Dazzle (can't be countered)
ORG 0x2c864
jumpToHack(DazzleCheck)

//Rightful X
ORG $2a52e //modifies the 1RN roll skill to check for rightful skills
SHORT 0x46C0
jumpToHack(RightfulCheck)

//acrobat
ORG $1a4cc
jumpToHack(AcrobatCheck)

//LockTouch
ORG $23E8C //ignore vanilla locktouch routine
jumpToHack(LockTouch)

//Pass
ORG $800 //modifies movement ARM code
WORD 0xE59FC000 0xE12FFF1C //ldr r12,Pass; bx r12
POIN PassCheck|1

// //Post combat skills
// ORG $1D258
// callHack_r1(PostCombatSkills)
// SHORT 0x2800 0xD017 0xE006 //cmp r0,0; beq RetFalse; b NextPart

//waryfighter
ORG $2AF90
#incbin "Teq Skills/Wary Fighter.dmp"
POIN SkillTester
WORD WaryFighterID

//Provoke
ORG $3DF78
jumpToHack(Provoke)

//LethalitySkill
ORG $2ACF8  //ignore the vanilla lethality routine
SHORT 0x4770

//Frenzy
ORG $2AB4C
callHack_r3(Frenzy)

//renewal
ORG $1a258
jumpToHack(Renewal)

//Discipline
ORG $2c13c
callHack_r3(Discipline)

//vantage
ORG $2af7c
jumpToHack(Vantage)

//desperation
ORG $2af0a
SHORT 0
jumpToHack(Desperation)

//live to serve
ORG $2ebd4
jumpToHack(LiveToServe)

//paragon
ORG $2b960
jumpToHack(Paragon)

//lunge
ORG $18744
callHack_r3(Lunge)
ORG $187b0
jumpToHack(LungeUpdate)
ORG $3a094
jumpToHack(LungeAI)

// //seal skills
ORG $2c088
jumpToHack(SealSkills)

ORG $2B7F8
  jumpToHack(Armsthrift)

//remove critup ability (for critup skill)
//ORG $2AC4A
//SHORT 0x46C0

//Triangle Adept
ORG $2C830
jumpToHack(TriangleAdept)

POP

NonGBALethalitySkill: //makes lethality skill/x% (/2 by default, and halved on bosses) instead of crit/2%, include this in the battle calculations after LethalitySkill (do NOT remove LethalitySkill)
#incbin "Other Skills/NonGBALethalitySkill.dmp" //if you decide to go with this please remember to change the skill definition to match the new effect
ALIGN 4

Bane: //skill/2% of leaving the enemy with 1hp if the normal damage would not have killed (bane is ignored if the unit has lethality)
#incbin "Other Skills/Bane.dmp"
POIN SkillTester
WORD LethalityID
WORD BaneID
ALIGN 4

DazzleCheck:
#incbin "Other Skills/dazzle.dmp"
POIN SkillTester
WORD DazzleID
ALIGN 4

FaireCheck: //added to fe8_calc_loop.event
#incbin "Ross Skills/FaireCheck.dmp"
POIN SkillTester
POIN FaireIDList
ALIGN 4

FaireIDList:
BYTE SwordfaireID LancefaireID AxefaireID BowfaireID TomefaireID TomefaireID TomefaireID TomefaireID
ALIGN 4

BreakerCheck: //added to fe8_calc_loop.event
#incbin "Ross Skills/BreakerCheck.dmp"
POIN SkillTester
POIN BreakerIDList
WORD 50 // Hit/Avoid Bonus
ALIGN 4

BreakerIDList:
BYTE SwordbreakerID LancebreakerID AxebreakerID BowbreakerID TomebreakerID TomebreakerID TomebreakerID TomebreakerID
ALIGN 4

BlowCheck:
#incbin "Ross Skills/BlowCheck.dmp"
POIN SkillTester
POIN BlowIDList

BlowIDList:
BYTE DuelistsBlowID DeathBlowID DartingBlowID WardingBlowID CertainBlowID ArmoredBlowID QuickDrawID ChivalryID PragmaticID HeroesDeathBlowID
ALIGN 4

DefendingCheck:
#incbin "Blade Skills/Defending.dmp"
POIN SkillTester
POIN DefendingIDList

DefendingIDList:
BYTE StrongRiposteID PatienceID PursuitID ChivalryID PragmaticID
ALIGN 4

AcrobatCheck:
#incbin "Teq Skills/Acrobat.dmp"
POIN SkillTester
WORD AcrobatID

PassCheck:
#incbin "Teq Skills/Pass.dmp"
POIN SkillTester
WORD PassID
WORD PassableID

// PostCombatSkills: //plus lifetaker
// #incbin "Post Combat Skills/CantoPlus_Galeforce.dmp"
// POIN SkillTester
// WORD CantoPlusID
// WORD CantoID
// WORD GaleforceID
// WORD LifetakerID
// WORD SavageBlowID
// POIN AuraSkillCheck

Provoke:
#incbin "Teq Skills/Provoke.dmp"
POIN SkillTester
WORD ProvokeID

Frenzy:
#incbin "Teq Skills/Frenzy.dmp"
POIN SkillTester
WORD FrenzyID

Renewal://combined healing skills
#incbin "Other Skills/RenewalAmaterasu.dmp"
POIN SkillTester
WORD RenewalID
POIN AuraSkillCheck
WORD AmaterasuID
WORD CamaraderieID
WORD ReliefID
WORD BondID

Discipline:
#incbin "Other Skills/Discipline.dmp"
POIN SkillTester
WORD DisciplineID

Vantage:
#incbin "Other Skills/vantage.dmp"
POIN SkillTester
WORD VantageID
WORD VantagePlusID

Desperation:
#incbin "Other Skills/desperation.dmp"
POIN SkillTester
WORD DesperationID

Wrath:
#incbin "Other Skills/wrath.dmp"
POIN SkillTester
WORD WrathID

LiveToServe:
#incbin "Other Skills/LiveToServe.dmp"
POIN SkillTester
WORD LiveToServeID

Paragon:
#incbin "Other Skills/Paragon.dmp"
POIN SkillTester
WORD ParagonID
WORD RenegadeID

Lunge:
#incbin "Teq Skills/lunge.dmp"
LungeUsability:
#incbin "Teq Skills/Lunge Usability.dmp"
POIN SkillTester
WORD LungeID
LungeEffect:
#incbin "Teq Skills/Lunge Effect.dmp"
AttackEffect:
#incbin "Teq Skills/Attack Effect.dmp"
LungeAI:
#incbin "Teq Skills/LungeAI.dmp"
POIN SkillTester
WORD LungeID
LungeUpdate:
#incbin "Teq Skills/lunge_updaterescuee.dmp"

MercyUsability:
#incbin "Teq Skills/Mercy Usability.dmp"
POIN SkillTester
WORD MercyID
MercyEffect:
#incbin "Teq Skills/Mercy Effect.dmp"

SealSkills:
#incbin "Seal Skills/SealSkills.dmp"
POIN SkillTester
POIN SealSkillList
WORD DebuffTable
SealSkillList:
BYTE SealStrID SealSklID SealSpdID SealDefID SealResID SealLukID
ALIGN 4

ElbowRoom:
#incbin "Other Skills/ElbowRoom.dmp"
POIN SkillTester
WORD ElbowRoomID

NaturalCover:
#incbin "Other Skills/NaturalCover.dmp"
POIN SkillTester
WORD NaturalCoverID

GambleUsability:
#incbin "Other Skills/Gamble Usability.dmp"
POIN SkillTester
WORD GambleID
GambleEffect:
#incbin "Other Skills/Gamble Effect.dmp"
Gamble:
#incbin "Other Skills/Gamble.dmp"

FieryBlood:
#incbin "Other Skills/FieryBlood.dmp"
POIN SkillTester
WORD FieryBloodID

LifeAndDeath:
#incbin "Other Skills/LifeAndDeath.dmp"
POIN SkillTester
WORD LifeAndDeathID

WindDisciple:
#incbin "Blade Skills/Winddisciple.dmp"
POIN SkillTester
WORD WindDiscipleID

Hawkeye:
#incbin "Blade Skills/Hawkeye.dmp"
POIN SkillTester
WORD HawkeyeID

LightWeight:
#incbin "Blade Skills/LightWeight.dmp"
POIN SkillTester
WORD LightWeightID

Trample:
#incbin "Teq Skills/Trample.dmp"
POIN SkillTester
WORD TrampleID

Opportunist:
#incbin "Teq Skills/Opportunist.dmp"
POIN SkillTester
WORD OpportunistID

CriticalCheck:
#incbin "Blade Skills/Critical.dmp"
POIN SkillTester
POIN CriticalIDList
CriticalIDList:
BYTE CriticalForceID KillingMachineID
ALIGN 4

LethalitySkill:
#incbin "Other Skills/LethalitySkill.dmp"
POIN SkillTester
WORD LethalityID

Armsthrift:
#incbin "Other Skills/Armsthrift.dmp"
POIN SkillTester|1
WORD ArmsthriftID

CritUpSkill:
#incbin "Other Skills/CritUpSkill.dmp"
POIN SkillTester
WORD CritUpID

RightfulCheck:
#incbin "Other Skills/RightfulCheck.dmp"
POIN SkillTester
WORD RightfulArchID
WORD RightfulKingID
WORD RightfulGodID

LuckySeven:
#incbin "Other Skills/LuckySeven.dmp"
POIN SkillTester
WORD LuckySevenID

OddRhythm:
#incbin "Other Skills/OddRhythm.dmp"
POIN SkillTester
WORD OddRhythmID

EvenRhythm:
#incbin "Other Skills/EvenRhythm.dmp"
POIN SkillTester
WORD EvenRhythmID

QuickBurn:
#incbin "Other Skills/QuickBurn.dmp"
POIN SkillTester
WORD QuickBurnID

SlowBurn:
#incbin "Other Skills/SlowBurn.dmp"
POIN SkillTester
WORD SlowBurnID

Roll1d12:
#incbin "Other Skills/roll12.dmp"
POIN SkillTester
WORD Roll12ID
POIN _12SkillList
ALIGN 4
_12SkillList:
BYTE SureShotID IgnisID ColossusID ImpaleID PaviseID AegisID AstraID SolID LunaID AetherID AdeptID LethalityID
ALIGN 4

LockTouch:
#incbin "Kao Skills/LockTouch.dmp"
POIN SkillTester
WORD LockTouchID

TraceSkill:
#incbin "Other Skills/trace.dmp"
POIN SkillTester
WORD TraceID
POIN Skill_Getter

#inctext lyn "Stances/Stances.elf"
StanceSkillList:
BYTE BracingStanceID DartingStanceID FierceStanceID KestrelStanceID MirrorStanceID ReadyStanceID SteadyStanceID SturdyStanceID SwiftStanceID WardingStanceID SpectrumStanceID
ALIGN 4

TriangleAdept:
#incbin "Teq Skills/TriangleAdept.dmp"
POIN SkillTester
WORD TriAdeptID

//Promote
ALIGN 4
Promote_Usability:
#incbin "Teq Skills/Remove and Promote/Promote_Usability.dmp"
POIN Promotion_Branch_Table
ALIGN 4
Promote_Effect:
#incbin "Teq Skills/Remove and Promote/Promote_Effect.dmp"
WORD Promote_Action_Byte
ALIGN 4
Autopromote_Func:
#incbin "Teq Skills/Remove and Promote/Autopromote_Func.dmp"


//Remove
ALIGN 4
RemoveUsability:
#incbin "Teq Skills/Remove and Promote/RemoveUsability.dmp"
POIN SkillTester
WORD RootedID
ALIGN 4
RemoveEffect:
#incbin "Teq Skills/Remove and Promote/RemoveEffect.dmp"
POIN Remove_Unit_Events
#include "Teq Skills/Remove and Promote/NewRemove.lyn.event"

ALIGN 4
RemoveYesNoMenuPointer:
POIN RemoveYesNoMenu

#define CloseMenu 0x1BCCD //0x234FD
#define MenuAlwaysUsability 0x4F449

ALIGN 4
RemoveYesNoMenu:
BYTE 0 0 // x y
BYTE 5 0 // height width
WORD 1 // unk
WORD RemoveYesNoCommands|IsPointer // menu commands
WORD 0 // oninit
WORD 0 //onend
WORD 0 // unk
WORD CloseMenu|IsPointer // onB
WORD 0 // onR
WORD 0 // onHelp

ALIGN 4
RemoveYesNoCommands:
//Yes
WORD 0 // jp name dont care
SHORT 0x843 // name
SHORT 0x0 // help
BYTE 0 // color
BYTE 0x32 // id
BYTE 0 0 // unk
POIN MenuAlwaysUsability|IsPointer // usability
WORD 0 // draw routine
WORD RemoveEffect+1|IsPointer // effect
WORD 0 // loop
WORD 0 // select
WORD 0 // cancel

//No
WORD 0 // jp name dont care
SHORT 0x844 // name
SHORT 0x0 // help
BYTE 0 // color
BYTE 0x33 // id
BYTE 0 0 // unk
POIN MenuAlwaysUsability|IsPointer // usability
WORD 0 // draw routine
WORD CloseMenu|IsPointer // effect
WORD 0 // loop
WORD 0 // select
WORD 0 // cancel

WORD 0 0 0 0 0 0 0 0 0 // term

Remove_Unit_Events:
CHECK_COORDS 0xFFFF
SADD 0xCB					//Move results into slot B
ASMC MakeFakeCurrentUnit|1
SET_SOMETHING 0xFFFE
DISA_IF 0xFFFE
ENDA

ALIGN 4
MakeFakeCurrentUnit:
#incbin "Teq Skills/Remove and Promote/MakeFakeCurrentUnit.dmp"

ALIGN 4
DidNotRemove:
#incbin "Teq Skills/Remove and Promote/DidNotRemove.dmp"

//Phantom movement cost
PhantomMoveCost:
#incbin "PhantomMoveCost.dmp"

//Battle animations
ALIGN 4
DukeBattleAnimPtr:
BYTE 9 1 $73 0 0 0 0 0 //mageknight_f
LandsknechtBattleAnimPtr:
BYTE 0 1 $5F 0 1 1 $60 0 9 1 $61 0 0 0 0 0 //wyvernlord_f
HalberdierBattleAnimPtr:
BYTE 1 1 $5A 0 9 1 $5B 0 0 0 0 0 //wyvernknight_f
//wizard is $6F, female sage

//Status weapons
PUSH
ORG $2C214
callHack_r3(Set_Status_After_Combat)
POP
ALIGN 4
Set_Status_After_Combat:
#incbin "Teq Skills/Set_Status_After_Combat.dmp"

ALIGN 4
Status_Weapons:
#incbin "Teq Skills/Status Weapons.dmp"
POIN StatusWeaponTable

StatusWeaponTable:
#define StatusWeaponTableEntry(Weap_ID, Status_Type, Duration_Of_Status) "BYTE Weap_ID (Status_Type|(Duration_Of_Status<<4))"
StatusWeaponTableEntry(OtataralBow, 3, 3) //Silence
StatusWeaponTableEntry(Blizzard, 2, 3) //Freeze
BYTE 0 0 //terminator
ALIGN 4



//#include "Other Skills/RandomMugs.event"
#include "Teq Skills/FE8-StealPlus/FE8-StealPlus EA.txt"
#include "Teq Skills/FE8-Capture/FE8-Capture Master EA File.txt"
#include "Teq Skills/FE8-Nullify/Nullify EA.txt"
//#include "Teq Skills/Remove and Promote/FE8-Set Condition/FE8-Set Condition.txt"

#include "Aura Skills/Aura Skills Installer.event"
#include "Proc Skills/Proc Skills Installer.event"
#include "Rally Skills/Rally Installer.event"

#include "Stan Skills/HeroesMovement/HeroesMovement.event"
#include "Post Combat Skills/Post Combat Skills Installer.event"

#include "Skill Removal Menu/RemoveSkillMenu.event"

#include "Other Skills/FE8-Item Range Fix/FE8-Item Range EA.event"
#include "Other Skills/Range Skills/RangeSkills.event"
